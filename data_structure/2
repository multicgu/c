#include<stdio.h>
#include<stdbool.h>
void dfs(int v,int (*grap)[v],int r,bool *visited);
void ListComponents(int v,int (*grap)[v],bool *visited,int * unvisited);
int main(void)
{
	int v, e,i=0;
	int vt1, vt2, n,big,small;
	scanf("%d%d",&v,&e);
	int grap[v][v];
	//n=v*(v+1)/2-v;
	//int grap[n];
	for(i=0;i<v;i++) //intitation grap
		for(n=0;n<v;n++)
			grap[i][n]=0;

	for(i=0;i<e;i++)
	{
		scanf("%d%d",&vt1,&vt2);
		grap[vt1][vt2]=grap[vt2][vt1]=0;
		/*if(vt1>vt2) {big=vt1; small=vt2;}
		else {big=vt2; small=vt1;}
		grap[small*(small+1)/2+big]=1;*/
	}
	//for(i=0;i<n;i++)
		//printf("%d %d\n",i,grap[i]);
	bool visited[v];
	int unvisited[v];
	//dfs
	ListComponents(v,grap,visited);

	return 0;
}

void ListComponents(int v,int (*grap)[v],bool *visited,int *unvisited)
{
	int i;
	int n;
	for(i=0;i<v;i++)
	{
		visited[i]=false;
		unvisited[n]=0;
	}
	for(i=0;i<v;i++)
	{
		if(visited[i]!=true)
			dfs(v,grap,i,visited);
		printf("{ ");
		for(n=0;n<v;n++)
		{
			printf("(visited[%d]=%d) ",n,visited[n]);
			if(visited[n]==true &&n unvisited[n]==0)
			{
				unvisited[n]=1;
				printf("%d ",n);
			}
		}
		printf("}\n");
	}
}

void dfs(int v,int (*grap)[v],int r,bool *visited)
{
	//printf("before visited change %d=%d\n",v,visited[v]);
	visited[r]=true;
	//printf("after visited change %d=%d\n",v,visited[v]);
	int i;
	//int a=v*(v+1)/2,b=a+v;
	for(i=0;i<=v;i++)
	{
		printf("in for\n");
	//	if((grapv[i]==1) && visited[i]!=true)
		//	printf("have e point %d ",i);
	}
	puts("");
	for(i=0;i<=v;i++)
	{
		if(grapv[r][i]==1 && visited[i]!=true)
			dfs(v,grap,i,visited);
	}
}
